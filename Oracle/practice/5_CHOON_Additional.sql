-- 1. 학생 이름과 주소지를 표시하시오. 단, 출력 헤더는 "학생 이름", "주소지"로 하고, 이름으로 오름차순 정렬
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS 주소지
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

-- 2. 휴학중인 학생들의 이름과 주민번호를 나이가 적은 순서로 화면에 출력
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY SUBSTR(STUDENT_SSN, 1, 6) DESC;

-- 3. 주소지가 강원도나 경기도인 학생들 중 1900년대 학번을 가진 학생 이름, 학번, 주소 출력(이름 오름차순)
-- (단, 출력헤더는 "학생이름", "학번", "거주지 주소")
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '강원도%' OR STUDENT_ADDRESS LIKE '경기도%')
      AND STUDENT_NO NOT LIKE 'A%'
ORDER BY STUDENT_NAME;

-- 4. 현재 법학과 교수 중 가장 나이가 많은 사람부터 이름을 확인(법학과의 학과코드는 TB_DEPARTMENT 참고)
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NO = 005
ORDER BY SUBSTR(PROFESSOR_SSN, 1, 6);

-- 5. 2004년 2학기에 'C3118100' 과목을 수강한 학생들의 학점 조회
-- (학점 높은 순으로 정렬, 학점이 같으면 학번이 낮은 학생부터 표시)
SELECT STUDENT_NO, TO_CHAR(POINT, 'FM9.00') POINT
FROM TB_GRADE
WHERE TERM_NO = 200402 AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO;

-- 6. 학생 번호, 학생 이름, 학과 이름을 학생 이름으로 오름차순 정렬하여 출력
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7. 춘 기술대학교의 과목 이름과 학과 이름 출력
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);
     
-- 8. 과목 이름과 과목별 교수 이름을 출력 (예시와 맞지 않음)
SELECT DISTINCT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR
     JOIN TB_CLASS USING(CLASS_NO)
     JOIN TB_PROFESSOR USING(PROFESSOR_NO)
ORDER BY PROFESSOR_NAME, CLASS_NAME;

-- 9. 8번의 결과 중 '인문사회' 계열에 속한 과목이름과 과목의 교수 이름 출력
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR
     JOIN TB_CLASS USING(CLASS_NO)
     JOIN TB_PROFESSOR P USING(PROFESSOR_NO)
     JOIN TB_DEPARTMENT D ON(P.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회';

-- 10. '음악학과' 학생들의 평점 출력. 헤더는 "학번", "학생 이름", "전체 평점"
-- (단, 평점은 소수점 1자리까지만 반올림하여 표시)
SELECT STUDENT_NO 학번, STUDENT_NAME "학생 이름", TO_CHAR(AVG(POINT), 'FM9.0') "전체 평점"
FROM TB_STUDENT
     JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NO = 059
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY STUDENT_NO;

-- 11. 학번이 A313047인 학생의 학과이름, 학생이름과 지도교수이름 출력
SELECT DEPARTMENT_NAME 학과이름, STUDENT_NAME 학생이름, PROFESSOR_NAME 지도교수이름
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
     JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

-- 12. 2007년도에 '인간관계론' 과목을 수강한 학생의 이름과 수강학기 출력
SELECT STUDENT_NAME, TERM_NO "TERM_NAME"
FROM TB_STUDENT
     JOIN TB_GRADE USING(STUDENT_NO)
WHERE SUBSTR(TERM_NO, 1, 4) = 2007 AND CLASS_NO = 'C2604100'
ORDER BY STUDENT_NAME;

-- 13. 예체능 계열 과목 중 담당교수를 한 명도 배정받지 못 한 과목이름과 학과 이름 출력
--AND (C.CLASS_NO = CP.CLASS_NO)
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C
     JOIN TB_DEPARTMENT D ON(C.DEPARTMENT_NO = D.DEPARTMENT_NO)
     LEFT JOIN TB_CLASS_PROFESSOR CP ON(C.CLASS_NO = CP.CLASS_NO)
WHERE (C.DEPARTMENT_NO BETWEEN 56 AND 63) AND CP.CLASS_NO IS NULL;

-- 14. 춘 기술대학교 서반아어학과 학생이름과 지도교수 이름을 출력
--(단, 지도교수가 없는 학생은 지도교수 이름에 "지도교수 미지정"으로 출력/ 헤더 "학생이름", "지도교수")
SELECT STUDENT_NAME 학생이름, NVL(PROFESSOR_NAME, '지도교수 미지정') 지도교수
FROM TB_STUDENT S, TB_PROFESSOR P
WHERE (COACH_PROFESSOR_NO = PROFESSOR_NO(+))
      AND S.DEPARTMENT_NO = 020
ORDER BY STUDENT_NO;

-- 15. 휴학생이 아닌 학생 중 평점이 4.0 이상인 학생의 학번, 이름, 학과 이름, 평점 출력
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME "학과 이름", 
       TRUNC(TO_CHAR(AVG(POINT)), 8) 평점
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
     JOIN TB_GRADE USING(STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING TO_CHAR(AVG(POINT)) >= 4.0
ORDER BY STUDENT_NO;

-- 16. 환경조경학과 전공과목들의 과목 별 평점 출력
SELECT CLASS_NO, CLASS_NAME, TRUNC(AVG(POINT), 8) "AVG(POINT)"
FROM TB_CLASS
     JOIN TB_GRADE USING(CLASS_NO)
WHERE DEPARTMENT_NO = 034 AND CLASS_TYPE LIKE '전공%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY CLASS_NO;

-- 17. 춘 기술대학교의 최경희 학생과 같은 과 학생들의 이름과 주소 출력
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO IN (SELECT DEPARTMENT_NO
                        FROM TB_STUDENT
                        WHERE STUDENT_NAME = '최경희');
                        
-- 18. 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번 출력
SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT S.STUDENT_NO, S.STUDENT_NAME, AVG(POINT)
      FROM TB_STUDENT S, TB_GRADE G, TB_DEPARTMENT D
      WHERE (S.STUDENT_NO = G.STUDENT_NO)
            AND (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
            AND D.DEPARTMENT_NAME = '국어국문학과'
      GROUP BY S.STUDENT_NO, S.STUDENT_NAME
      ORDER BY AVG(POINT) DESC) 
WHERE ROWNUM = 1;
-- TB_DEPARTMENT JOIN을 빼고 DEPARTMENT_NO = 001로 조건 달면 평점 순으로 제대로 정렬되지 않음

-- 19. 춘 기술대학교의 "환경조경학과"가 속한 같은 계열 학과들의 학과 별 전공과목 평점 출력
-- (단, 헤더는 "계열 학과명", "전공평점"/ 평점은 소수점 한 자리까지만 반올림하여 표시)
SELECT DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT), 1) 전공평점
FROM TB_DEPARTMENT D, TB_GRADE G, TB_CLASS C
WHERE D.DEPARTMENT_NO = C.DEPARTMENT_NO
      AND G.CLASS_NO = C.CLASS_NO
      AND CLASS_TYPE LIKE '전공%'
      AND CATEGORY = '자연과학'
GROUP BY DEPARTMENT_NAME
ORDER BY 1;