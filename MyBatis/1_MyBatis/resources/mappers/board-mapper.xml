<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
	<!-- cache-ref는 mapper의 namespace가 아님!! 주의!!! -->
	<select id="getListCount" resultType="_int">
		select count(*)
		from board
		where b_status='Y'
	</select>
	
	<select id="selectBoardList" resultMap="boardResultSet">
		select bId, btype, btitle, bcontent, bwriter, nickname, 
			   bcount, b_create_date, b_modify_date, b_status
		from board
			 join member on(bwriter = user_id)
		where b_status='Y'
		order by bid desc
	</select>
	
	<resultMap type="Board" id="boardResultSet">
		<id column="BID" property="bId"/>
		<result column="BTYPE" property="bType"/>
		<result column="BTITLE" property="bTitle"/>
		<result column="BCONTENT" property="bContent"/>
		<result column="BWRITER" property="bWriter"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="BCOUNT" property="bCount"/>
		<result column="B_CREATE_DATE" property="bCreateDate"/>
		<result column="B_MODIFY_DATE" property="bModifyDate"/>
		<result column="B_STATUS" property="bStatus"/>
	</resultMap>
	
	<update id="updateCount" parameterType="_int">
		update Board
		set bcount = bcount + 1
		where bid=#{bId}
	</update>
	
	<select id="selectBoardDetail" parameterType="_int" resultMap="boardResultSet2">
		SELECT BID, BTYPE, BTITLE, BCONTENT, BWRITER, M.NICKNAME B_NICKNAME,
       		   BCOUNT, B_CREATE_DATE, B_MODIFY_DATE, B_STATUS,
       		   RID, RCONTENT, REF_BID, RWRITER, M2.NICKNAME AS R_NICKNAME, R_CREATE_DATE, R_MODIFY_DATE, R_STATUS
		FROM BOARD
    		 JOIN MEMBER M ON(BWRITER = M.USER_ID)
    		 LEFT JOIN REPLY ON(BID = REF_BID) <!-- BOARD기준으로 댓글이 없어도 글이 나오게끔 LEFT JOIN해줌 -->
    		 LEFT JOIN MEMBER M2 ON(RWRITER = M2.USER_ID)<!-- 댓글의 닉네임이 게시글의 닉네임으로 뜨지 않도록 한 번 더 조인해줌 -->
		WHERE BID = #{bId} AND B_STATUS='Y'
		ORDER BY RID DESC
	</select>
	
	<resultMap type="Board" id="boardResultSet2">
		<id column="BID" property="bId"/>
		<result column="BTYPE" property="bType"/>
		<result column="BTITLE" property="bTitle"/>
		<result column="BCONTENT" property="bContent"/>
		<result column="BWRITER" property="bWriter"/>
		<result column="b_NICKNAME" property="nickName"/>
		<result column="BCOUNT" property="bCount"/>
		<result column="B_CREATE_DATE" property="bCreateDate"/>
		<result column="B_MODIFY_DATE" property="bModifyDate"/>
		<result column="B_STATUS" property="bStatus"/>
		<!-- 댓글 -->
		<collection property="replyList" resultMap="replyResultSet" javaType="arrayList"/>
	</resultMap>
	
	<resultMap type="Reply" id="replyResultSet">
		<id column="RID" property="rId"/>
		<result column="RCONTENT" property="rContent"/>
		<result column="REF_BID" property="refBid"/>
		<result column="RWRITER" property="rWriter"/>
		<result column="R_NICKNAME" property="nickName"/>
		<result column="R_CREATE_DATE" property="rCreateDate"/>
		<result column="R_MODIFY_DATE" property="rModifyDate"/>
		<result column="R_STATUS" property="rStatus"/>
	</resultMap>
	
	<select id="getSearchResultListCount" resultType="_int">
		select count(*)
		from board b
			 join member on(bwriter = user_id) <!-- 닉네임으로 검색해야 하니까 그 닉네임이 아이디와 일치하는지 확인 -->
		where b_status='Y'
		<if test="condition == 'writer'"><!-- writer는 데이터니까 싱글쿼테이션으로 묶음 -->
			  and nickname=#{value}
		</if>
		<if test="condition == 'title'">
<!-- 			  and btitle=#{value} -->
			  and btitle like '%' || #{value} || '%'
		</if>
		<if test="condition == 'content'">
			  and bcontent like '%' || #{value} || '%'
		</if>
	</select>
	
	<select id="getSearchResultList" parameterType="hashmap" resultMap="boardResultSet">
		select *
		from board
			 join member on(bwriter = user_id)
		where b_status='Y'
		<choose>
			<when test="condition == 'writer'">
				and nickname=#{value}
			</when>
			<when test="condition == 'title'">
				and btitle like '%' || #{value} || '%'
			</when>
<!-- 			<when test="condition == 'content'"> -->
<!-- 				and content like '%' || #{value} || '%' -->
<!-- 			</when> -->
			<otherwise> <!-- default와 같은 기능 -->
				and bcontent like '%' || #{value} || '%'
			</otherwise>
		</choose>
		order by bid desc
	</select>
</mapper>
