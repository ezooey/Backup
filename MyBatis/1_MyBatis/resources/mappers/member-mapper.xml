<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
<!-- 멤버 매퍼를 마이바티스가 인지할 수 있도록 해야 매핑이 됨 -->

	<select id="loginMember" parameterType="member.model.vo.Member" resultMap="memberResultSet">
	<!-- resultType설정으로 마이바티스가 알아서 형변환해줌 rset을 Member로 넣던 과정 생략 가능! -->
		select *
		from member
		where user_id = #{userId}
			  and user_pwd = #{userPwd}
			  and m_status = 'Y'
	</select>
	<!-- 
		id : 외부(DAO)에서 참조하기 위한 쿼리문의 고유 아이디(구분자)
		parameterType : 구문에 전달될 파라미터의 패키지 경로를 포함한 전체 클래스명 혹은 별칭
		resultType/resultMap : 쿼리 실행 후 조회된 결과를 자바에서 사용할 수 있게 하는 객체
	 -->
	 
	 <!-- DB의 컬럼과 클래스의 필드의 이름이 달라 서로 매핑시켜야 할 때 사용 -->
	 <resultMap type="member.model.vo.Member" id="memberResultSet">
	 
	 	<id column="USER_ID" property="userId"/><!-- 기본 키 -->
	 	<result column="USER_PWD" property="userPwd"/><!-- 일반 컬럼 -->
	 	<result column="USER_NAME" property="userName"/>
	 	<result column="NICKNAME" property="nickName"/>
	 	<result column="EMAIL" property="email"/>
	 	<result column="BIRTHDAY" property="birthDay"/>
	 	<result column="GENDER" property="gender"/>
	 	<result column="PHONE" property="phone"/>
	 	<result column="ADDRESS" property="address"/>
	 	<result column="ENROLL_DATE" property="enrollDate"/>
	 	<result column="UPDATE_DATE" property="updateDate"/>
	 	<result column="M_STATUS" property="mStatus"/>
	 </resultMap>
	 
	 <insert id="insertMember" parameterType="member.model.vo.Member">
	 <!-- 
	 	insert할 때는 반환형이 int. resultMap을 쓰지 않아도 됨 
	 	select할 때에만 resultType/resultMap을 쓴다
	 -->
	 	insert into Member
	 	values(#{userId}, #{userPwd}, #{userName}, #{nickName}, #{email}, #{birthDay}, 
	 		   #{gender}, #{phone}, #{address}, sysdate, sysdate, default)
	 </insert>
	 
	 <update id="updateMember" parameterType="Member">
	 	update Member
	 	set user_name=#{userName}, nickName=#{nickName}, email=#{email}, birthday=#{birthDay},
	 		gender=#{gender}, phone=#{phone}, address=#{address}
	 	where user_id=#{userId}
	 </update>
	 
	 <update id="updatePwd" parameterType="hashmap"> <!-- map으로 써줘도 됨(HashMap은 내장별칭이 있다) -->
	 	update Member
	 	set user_pwd=#{newPwd}
	 	where user_id=#{userId} and user_pwd=#{userPwd}
	 </update>
	 
	 <update id="deleteMember" parameterType="string">
	 	update Member
	 	set m_status= 'N'
	 	where user_id=#{userId}
	 </update>
</mapper>